{
  "name": "current-project",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "ts-node src/index.ts",
    "sql-dump-all": "docker exec -t web-app-boilerplate-postgres-image-1 pg_dumpall --inserts --no-owner  -c --username=postgres > ./init.sql",
    "sql-dump-schema": "docker exec -t web-app-boilerplate-postgres-image-1 pg_dumpall -s --no-owner  -c --username=postgres > ./schema.sql",
    "create-db": "docker exec -i web-app-boilerplate-postgres-image-1 psql --username=postgres -d postgres -c \"CREATE DATABASE mydb;\"",
    "drop-db": "docker exec -i web-app-boilerplate-postgres-image-1 psql --username=postgres -d postgres -c \"DROP DATABASE IF EXISTS mydb;\"",
    "sql-restore": "docker exec -i web-app-boilerplate-postgres-image-1 psql --username=postgres -d postgres < ./init.sql",
    "watch": "nodemon server.js",
    "auth": "nodemon authServer.js",
    "prisma-sync": "npx prisma introspect && prisma generate",
    "test": "echo \"Error: no test specified\" && exit 1",
    "init-db": "npm run drop-db && npm run create-db && npm run sql-restore && npm run prisma-sync"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@prisma/client": "^3.4.1",
    "@types/bcryptjs": "^2.4.2",
    "@types/jsonwebtoken": "^8.5.5",
    "@types/node": "^16.11.6",
    "bcryptjs": "^2.4.3",
    "dotenv": "^8.6.0",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.13",
    "nodemon": "^1.19.2",
    "prisma": "^3.4.1"
  }
}